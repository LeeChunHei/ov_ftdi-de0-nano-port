// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/02/2023 08:43:33"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab0
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab0_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK_50;
reg rclk;
reg rst_n;
// wires                                               
wire [9:0] LED;
wire o_arempty;
wire o_awfull;
wire [7:0] o_rdata;
wire o_rempty;
wire o_rinc;
wire [7:0] o_wdata;
wire o_wfull;
wire o_winc;

// assign statements (if any)                          
lab0 i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.LED(LED),
	.o_arempty(o_arempty),
	.o_awfull(o_awfull),
	.o_rdata(o_rdata),
	.o_rempty(o_rempty),
	.o_rinc(o_rinc),
	.o_wdata(o_wdata),
	.o_wfull(o_wfull),
	.o_winc(o_winc),
	.rclk(rclk),
	.rst_n(rst_n)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK_50
always
begin
	CLOCK_50 = 1'b0;
	CLOCK_50 = #10000 1'b1;
	#10000;
end 

// rst_n
always
begin
	rst_n = 1'b0;
	rst_n = #20000 1'b1;
	#980000;
end 

// rclk
always
begin
	rclk = 1'b0;
	rclk = #2500 1'b1;
	#2500;
end 
endmodule

